{"version":3,"sources":["Context.js","Todo/TodoItem.js","Todo/TodoList.js","Loader.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","styles","li","display","justifyContent","alignItems","padding","width","border","borderRadius","marginBottom","input","marginRight","TodoItem","todo","index","onChange","removeTodo","useContext","classes","completed","push","style","className","join","type","checked","id","title","onClick","bind","ul","margin","listStyle","marginLeft","TodoList","props","items","map","onToggle","AddTodo","lazy","Promise","resolve","setTimeout","App","useState","todos","setTodos","loading","setLoading","useEffect","fetch","then","response","json","Provider","value","filter","el","Suspense","fallback","onCreate","concat","Date","now","Loader","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b794f9c2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Context = React.createContext();\r\n\r\n\r\nexport default Context\r\n","import React, { useContext } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Context from '../Context'\r\n\r\nconst styles = {\r\n  li: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: '0.5rem 1rem',\r\n    width: '780px',\r\n    border: '1px solid gray',\r\n    borderRadius: '5px',\r\n    marginBottom: '.5rem',\r\n  },\r\n\r\n  input: {\r\n    marginRight: '1rem',\r\n  },\r\n\r\n\r\n}\r\n\r\nfunction TodoItem ({ todo, index, onChange}) {\r\n  const { removeTodo } = useContext(Context);\r\n  const classes = [];\r\n\r\n  if (todo.completed) {\r\n    classes.push('done')\r\n  }\r\n  return (\r\n    <li style = {styles.li}>\r\n      <span className = {classes.join(' ')}>\r\n        <input type=\"checkbox\" checked = { todo.completed } style = {styles.input} onChange = {() => onChange(todo.id)}></input>\r\n        <strong>{index + 1}. </strong>\r\n        { todo.title }\r\n      </span>\r\n      <button className = \"remove__button\" onClick = {removeTodo.bind(null, todo.id)}> &times;</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n  index: PropTypes.number,\r\n  onChange: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default TodoItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport TodoItem from './TodoItem';\r\n\r\nconst styles = {\r\n  ul: {\r\n    padding: 0,\r\n    margin: 0,\r\n    listStyle: 'none',\r\n    marginLeft: '1rem',\r\n\r\n  }\r\n}\r\n\r\nfunction TodoList (props) {\r\n\r\n  return (\r\n    <ul style = { styles.ul }>\r\n      { props.items.map( (todo, index) => {\r\n        return <TodoItem todo = { todo } key = { todo.id } index = { index } onChange = { props.onToggle } ></TodoItem>\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nTodoList.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onToggle: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoList;\r\n","import React from 'react'\r\n\r\nexport default () => <div style = {{display: 'flex', justifyContent: 'center', margin: '0.5rem'}}><div className = \"lds-ellipsis\"><div></div><div></div><div></div><div></div></div></div>\r\n","import React, { lazy, useEffect } from 'react'\nimport Context from './Context'\n\nimport TodoList from './Todo/TodoList';\nimport Loader from './Loader'\n\nconst AddTodo = lazy(() =>\n  new Promise(resolve => {\n    setTimeout(() => {\n      resolve(import('./Todo/AddTodo'))\n    }, 3000)\n  })\n);\n\nfunction App() {\n  const [todos, setTodos] = React.useState([])\n  const [loading, setLoading] = React.useState(true)\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/todos?_limit=5')\n      .then(response => response.json())\n      .then(todos => {\n        setTimeout(() => {\n          setTodos(todos);\n          setLoading(false);\n        }, 2000);\n\n      })\n  }, [])\n\n  function toggleTodo(id) {\n    setTodos(\n      todos.map(el => {\n        if(el.id === id) {\n          el.completed = !el.completed;\n        }\n        return el;\n      })\n    )\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(el => el.id !== id))\n  }\n\n  function addTodo(title) {\n    setTodos(\n      todos.concat([\n        {\n          title,\n          id: Date.now(),\n          completed: false,\n        }\n      ])\n    )\n  }\n\n  return (\n    <Context.Provider value = {{ removeTodo }}>\n      <div className=\"wrapper\">\n        <h1>Test React project</h1>\n        <React.Suspense fallback = {<p>Loading...</p>}>\n          <AddTodo onCreate = {addTodo}></AddTodo>\n        </React.Suspense>\n        { loading && <Loader></Loader>}\n        { todos.length ? <TodoList items = { todos } onToggle = { toggleTodo }></TodoList> : loading ? null : <p> No things to do</p> }\n\n      </div>\n    </Context.Provider>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}